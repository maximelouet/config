# Saumon shell aliases and functions


# go up in directory tree
function up() {
  local d=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
  do
    d=$d/..
  done
  d=$(echo $d | sed -e 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}
# go up in directory tree and ls
function u() {
  local d=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
  do
    d=$d/..
  done
  d=$(echo $d | sed -e 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
  ls
}

# cd and ls
function c() {
  cd "$@" && ls
}

# give access rights to files
function cx() {
  chmod +x $*
}

# delete temporary files
function mr_clean() {
  find -name "*~" -delete -o -name "#*#" -delete -o -name "a.out" -delete
}

# better man pages
function man() {
  env \
  LESS_TERMCAP_md=$'\e[01;31m' \
  LESS_TERMCAP_me=$'\e[0m' \
  LESS_TERMCAP_se=$'\e[0m' \
  LESS_TERMCAP_so=$'\e[01;44;33m' \
  LESS_TERMCAP_ue=$'\e[0m' \
  LESS_TERMCAP_us=$'\e[01;32m' \
  GROFF_NO_SGR=1 \
  PAGER="less -X" \
  _NROFF_U=1 \
  man "$@"
}

# extract a file of any format
function extract() {
  if [ -f "$1" ] ; then
    local filename=$(basename "$1")
    local foldername="${filename%%.*}"
    local fullpath=`perl -e 'use Cwd "abs_path";print abs_path(shift)' "$1"`
    local didfolderexist=false
    if [ -d "$foldername" ]; then
      didfolderexist=true
      read -p "$foldername already exists, do you want to overwrite it? (y/n) " -n 1
      echo
      if [[ $REPLY =~ ^[Nn]$ ]]; then
	return
      fi
    fi
    mkdir -p "$foldername" && cd "$foldername"
    case $1 in
      *.tar.bz2) tar xjf "$fullpath" ;;
      *.tar.gz) tar xzf "$fullpath" ;;
      *.tar.xz) tar Jxvf "$fullpath" ;;
      *.tar.Z) tar xzf "$fullpath" ;;
      *.tar) tar xf "$fullpath" ;;
      *.taz) tar xzf "$fullpath" ;;
      *.tb2) tar xjf "$fullpath" ;;
      *.tbz) tar xjf "$fullpath" ;;
      *.tbz2) tar xjf "$fullpath" ;;
      *.tgz) tar xzf "$fullpath" ;;
      *.txz) tar Jxvf "$fullpath" ;;
      *.zip) unzip "$fullpath" ;;
      *) echo "'$1' cannot be extracted via extract()" && cd .. && ! $didfolderexist && rm -r "$foldername" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# decode base64 shortcut
function bd() {
  echo -n $1 | base64 -d && echo -n $1 | base64 -d | xclip -selection clipboard
}

# prepare an epitech repo
function prepus() {
  blih -u $TEKUSER repository create $1
  blih -u $TEKUSER repository setacl $1 ramassage-tek r
  git clone git.epitech.eu:/$TEKUSER/$1 $1
  cd $1
  git commit -m "Initial commit" --allow-empty
  git push
}

# useful epitech repo commands
function repo() {
  case "$1" in
    prepare)
      prepus
      ;;
    create)
      blih -u $TEKUSER repository create $2
      blih -u $TEKUSER repository setacl $2 ramassage-tek r
      ;;
    list)
      blih -u $TEKUSER repository list | sort
      ;;
    delete)
      blih -u $TEKUSER repository delete $2
      ;;
    getacl)
      blih -u $TEKUSER repository getacl $2
      ;;
    setacl)
      blih -u $TEKUSER repository setacl $2 $3 $4
      ;;
    clone)
      git clone git@git.epitech.eu:/$TEKUSER/$2
      ;;
  esac
}

# archlinux news
function news() {
  echo -e "$(echo $(curl --silent https://www.archlinux.org/feeds/news/ | sed -e ':a;N;$!ba;s/\n/ /g') | \
    sed -e 's/&gt;/ç/g' |
  sed -e 's/&lt;\/aç/£/g' |
  sed -e 's/href\=\"/§/g' |
  sed -e 's/<title>/\\n\\n  :: \\e[01;31m/g' -e 's/<\/title>/\\e[00m ::\\n/g' |
  sed -e 's/<link>/ \>\\e[01;36m/g' -e 's/<\/link>/\\e[00m</g' |
  sed -e 's/<description>/\\n\\n\\e[00;37m/g' -e 's/<\/description>/\\e[00m\\n\\n/g' |
  sed -e 's/&lt;pç/\n/g' |
  sed -e 's/&lt;bç\|&lt;strongç/\\e[01;30m/g' -e 's/&lt;\/bç\|&lt;\/strongç/\\e[00;37m/g' |
  sed -e 's/&lt;a[^§]*§\([^\"]*\)\"[^ç]*ç\([^£]*\)[^£]*£/\\e[01;32m\2\\e[00;37m \\e[01;34m[ \\e[01;35m\1\\e[00;37m\\e[01;34m ]\\e[00;37m/g' |
  sed -e 's/&lt;liç/\n \\e[01;34m*\\e[00;37m /g' |
  sed -e 's/<[^>]*>/ /g' |
  sed -e 's/&lt;[^ç]*ç//g' |
  sed -e 's/[ç£§]//g')\n" | tail -n +5 | head -n 30
  echo -e "...\nhttps://www.archlinux.org/news/\n"
}


# systemctl
user_commands=(
  list-units is-active status show help list-unit-files
  is-enabled list-jobs show-environment cat
)

sudo_commands=(
  start stop reload restart try-restart isolate kill
  reset-failed enable disable reenable preset mask unmask
  link load cancel set-environment unset-environment
  edit daemon-reload
)

for c in $user_commands; do; alias sc-$c="systemctl $c"; done
for c in $sudo_commands; do; alias sc-$c="sudo systemctl $c"; done


# open
if has_nvim; then
  alias v='nvim'
else
  alias v='vim'
fi
alias vi='v'
alias vim='v'

# colors everywhere
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# colors FUCKING EVERYWHERE
alias make='colormake'
alias valgrind='colour-valgrind'

# ls (exa)
alias ls='exa --sort=Name --group-directories-first'
alias l='ls -l'
alias lg='l -g'
alias la='ls -a'
alias lag='la -g'
alias ll='l'
alias llg='ll -g'
alias lla='l -a'
alias llag='lla -g'

# package management
alias maj='yaourt -Syua'
alias install='yaourt -S'
alias remove='yaourt -Rn'
alias remover='yaourt -Rnsu'
alias search='yaourt'
alias pkclean='paccache -rk 2'

# arch keyring
alias key-update='sudo pacman-key --populate archlinux'
alias key-add='gpg --recv-key'
function key-sign()
{
  sudo pacman-key -r $1
  sudo pacman-key -f $1
  sudo pacman-key --lsign-key $1
}

# verbose operations
alias mv='mv -v'
alias rm='rm -I -v'
alias cp='cp -v'
alias ln='ln -v'

# edit shortcuts
alias ve='v ~/.config/nvim/init.vim'
alias ze='v ~/.zshrc'
alias zea='v ~/.zsh_aliases'
alias ie='v ~/.config/i3/config'
alias pe='sudo nvim /etc/pacman.conf'
alias ne='sudo nvim /etc/nginx/nginx.conf'
alias me='sudo nvim /etc/pacman.d/mirrorlist'

# corrections
alias gti='echo "pauvre merde";git'
alias mkae='echo "pauvre merde";make'
alias ma,='man'

# funny
alias whyami='echo "Ask your mom";:'
alias putain='echo "Wesh ta gueule";:'
alias bonsoir='echo "Bonsoir.";:'
alias mama='echo "Mama ?";:'
alias wtf='dmesg'
alias rtfm='man'
alias bite='echo "owi bit";:'
alias apt-get='echo "pauvre bite";:'
alias yaoi='yaourt'
alias fucking='sudo'
alias ="echo \"Moi aussi je t'aime\";:"
alias meurs='echo "Non."'

# misc
alias tree='tree -C'
alias calc='bc'
alias temp='cat /sys/class/thermal/thermal_zone0/temp'
alias week='date +%V'
alias update-grub='sudo grub2-mkconfig -o /boot/grub2/grub.cfg'
alias song='curl http://cigix.noip.me/update.php; echo'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'
alias diskspace='df -P -kHl | grep -v tmpfs | grep -v "dev " | grep -v run'
alias riplaco='ping -i 1.5 8.8.8.8 | grep -E --only-match --color=never "[0-9\.]+ ms"'
alias path='echo $PATH | tr -s ":" "\n"'
alias ff='find $1 -type f -name'
alias pp="mpc toggle | tail -n2 | head -n1 | tr -d '[' | awk '{print \$1}' | tr -d ']' | tr '\n' ' ' | sed 's/playing//' | sed 's/paused//' && mpc status | head -n1"
alias ccat='highlight -O ansi'
alias :q='exit'
alias timestamp='date +%s'
alias norman='python2 /data/scripts/norman.py -nocheat -verbose -return -printline -score '
alias beep_disable='xset b 0 600 50'
alias beep_enable='xset b 100 600 50'
alias i3-info='i3-msg -t get_tree | jq'

# shortcuts
alias j='jobs'
alias t='task'
alias ta='tree -a'
alias m='make'

# forecast
alias weather="curl wttr.in"
alias moon="curl wttr.in/Moon"

# epitech
alias emacs='emacs -nw'
alias blih='blih -u $TEKUSER'
